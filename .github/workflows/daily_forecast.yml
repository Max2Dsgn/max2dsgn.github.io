name: üïì Daily AI Forecast

on:
  schedule:
    - cron: '0 6 * * *'   # –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ 06:00 UTC
  workflow_dispatch:       # –∑–∞–ø—É—Å–∫ –≤—Ä—É—á–Ω—É—é
jobs:
  update_forecast:
    runs-on: ubuntu-latest

    steps:
      - name: üß© –ö–ª–æ–Ω–∏—Ä—É–µ–º —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π
        uses: actions/checkout@v4

      - name: üêç –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
        run: |
          pip install -r requirements.txt

      - name: ‚öôÔ∏è –ó–∞–ø—É—Å–∫–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–≥–Ω–æ–∑–∞
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          python - <<'PYCODE'
import os, feedparser, json, datetime, openai

# --- –ú–∏–Ω–∏-–≤–µ—Ä—Å–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è ---
openai.api_key = os.getenv("OPENAI_API_KEY")
RSS = [
  "https://techcrunch.com/feed/",
  "https://www.theverge.com/rss/index.xml",
  "https://www.wired.com/feed/rss",
  "https://www.producthunt.com/feed",
  "https://rssexport.rbc.ru/rbcnews/technology/20/full.rss",
  "https://habr.com/ru/rss/all/all/",
]

KEYWORDS = ["tech", "technology", "startup", "innovation", "design", "ai", "machine learning",
            "ux", "ui", "–ø—Ä–æ–¥—É–∫—Ç", "—Ç–µ—Ö–Ω–æ–ª–æ–≥", "–∏–Ω–Ω–æ–≤–∞—Ü", "–¥–∏–∑–∞–π–Ω", "—Ü–∏—Ñ—Ä–æ–≤", "—Ä–æ–±–æ—Ç"]

headlines = []
for url in RSS:
    feed = feedparser.parse(url)
    for entry in feed.entries:
        title = entry.title
        if any(k.lower() in title.lower() for k in KEYWORDS):
            headlines.append(title)
headlines = headlines[:20]

joined = "\n".join([f"- {h}" for h in headlines])
prompt = f"""–¢—ã ‚Äî —ç–∫—Å–ø–µ—Ä—Ç –≤ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è—Ö –∏ –¥–∏–∑–∞–π–Ω–µ. –ò—Å–ø–æ–ª—å–∑—É—è –Ω–æ–≤–æ—Å—Ç–∏:
{joined}
–î–∞–π –∫—Ä–∞—Ç–∫–∏–π –ø—Ä–æ–≥–Ω–æ–∑ –Ω–∞ –Ω–µ–¥–µ–ª—é, –º–µ—Å—è—Ü –∏ –≥–æ–¥ –¥–ª—è —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–∏—Ö –∏ –ø—Ä–æ–¥—É–∫—Ç–æ–≤—ã—Ö —Ç—Ä–µ–Ω–¥–æ–≤ (–Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ)."""

response = openai.completions.create(
    model="gpt-4o-mini",
    prompt=prompt,
    max_tokens=700,
    temperature=0.7,
)
forecast = response.choices[0].text.strip()

os.makedirs("data", exist_ok=True)
history_path = "data/forecasts_history.json"
today = datetime.date.today().isoformat()
if os.path.exists(history_path):
    with open(history_path, "r") as f:
        history = json.load(f)
else:
    history = []
history.insert(0, {"date": today, "forecast": forecast})
history = history[:7]
with open(history_path, "w") as f:
    json.dump(history, f, ensure_ascii=False, indent=2)
PYCODE

      - name: üíæ –ö–æ–º–º–∏—Ç–∏–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
        run: |
          git config --global user.name "ForecastBot"
          git config --global user.email "forecastbot@users.noreply.github.com"
          git add data/forecasts_history.json || true
          git commit -m "ü§ñ Daily forecast update" || echo "No changes"
          git push
